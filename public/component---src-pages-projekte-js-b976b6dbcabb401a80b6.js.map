{"version":3,"sources":["webpack:///./src/pages/projekte.js"],"names":["Content","styled","div","withConfig","displayName","componentId","ProjectList","StyledCard","Card","StyledText","StyledImage","Image","query","Projects","_ref","projects","data","allMarkdownRemark","edges","slice","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_ComponentsIndex__WEBPACK_IMPORTED_MODULE_3__","map","project","_project$node","node","excerpt","slug","fields","_project$node$frontma","frontmatter","title","startDate","endDate","place","img","Object","assign","titleImage","childImageSharp","fluid","key","to","state"],"mappings":"kLAMMA,EAAUC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAGJ,CAAH,yGAUPK,EAAcL,IAAOC,IAAVC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,YAAGJ,CAAH,yCAKXM,EAAaN,YAAOO,KAAVL,WAAA,CAAAC,YAAA,uBAAAC,YAAA,YAAGJ,CAAH,gKAYVQ,EAAaR,IAAOC,IAAVC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,YAAGJ,CAAH,kBAGVS,EAAcT,YAAOU,KAAVR,WAAA,CAAAC,YAAA,wBAAAC,YAAA,YAAGJ,CAAH,kBAmEJW,EAAK,aAkCHC,UAjGE,SAAAC,GAAc,IAGdC,EAHcD,EAAXE,KAEhBC,kBACEC,MAHyBC,MAAA,GAO7B,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACtB,EAAD,KACEoB,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAChB,EAAD,KACGS,EAASS,IAAI,SAAAC,GAAW,IAAAC,EAiBnBD,EAfFE,KACEC,EAHmBF,EAGnBE,QACUC,EAJSH,EAInBI,OAAUD,KAJSE,EAAAL,EAKnBM,YACEC,EANiBF,EAMjBE,MACAC,EAPiBH,EAOjBG,UACAC,EARiBJ,EAQjBI,QACAC,EATiBL,EASjBK,MAGgBC,EAZCC,OAAAC,OAAA,GAAAR,EAUjBS,WACEC,gBACEC,OAOV,OACEtB,EAAAC,EAAAC,cAACf,EAAD,CAAYoC,IAAKV,GACfb,EAAAC,EAAAC,cAACb,EAAD,KACEW,EAAAC,EAAAC,cAAA,UAAKW,GACH,WACA,OAAoBE,GAClB,KAAKD,GAAyB,OAAZC,EAChB,OAAO,KACT,KAAiB,OAAZA,EACH,OAAOf,EAAAC,EAAAC,cAAA,UAAKY,GACd,QACE,OAAOd,EAAAC,EAAAC,cAAA,UAAQY,EAAR,MAAuBC,IAPlC,GAUFf,EAAAC,EAAAC,cAAA,SAAIM,GACJR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEqB,GAAIf,EACJgB,MAAO,CAAEZ,QAAOC,YAAWC,UAASE,MAAKD,UAF3C,kBAOFhB,EAAAC,EAAAC,cAACZ,EAAD,CAAa2B,IAAKA","file":"component---src-pages-projekte-js-b976b6dbcabb401a80b6.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport { Layout, Card, Image, Button } from \"../components/ComponentsIndex\"\n\nconst Content = styled.div`\n  grid-column: 2/3;\n  padding: 3em 0;\n\n  h1 {\n    border-bottom: 1px solid rgb(var(--dark-gray));\n    padding-bottom: 1em;\n  }\n`\n\nconst ProjectList = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCard = styled(Card)`\n  margin: 1em 0;\n  display: grid;\n  grid-template-columns: 2fr 20em;\n  padding: 0;\n\n  @media (max-width: 50em) {\n    grid-template-columns: 1fr;\n    grid-template-rows: max-content 20em;\n  }\n`\n\nconst StyledText = styled.div`\n  padding: 3em;\n`\nconst StyledImage = styled(Image)`\n  height: 100%;\n`\n\nconst Projects = ({ data }) => {\n  const {\n    allMarkdownRemark: {\n      edges: [...projects],\n    },\n  } = data\n\n  return (\n    <Layout>\n      <Content>\n        <h1>Projekte</h1>\n        <ProjectList>\n          {projects.map(project => {\n            const {\n              node: {\n                excerpt,\n                fields: { slug },\n                frontmatter: {\n                  title,\n                  startDate,\n                  endDate,\n                  place,\n                  titleImage: {\n                    childImageSharp: {\n                      fluid: { ...img },\n                    },\n                  },\n                },\n              },\n            } = project\n\n            return (\n              <StyledCard key={title}>\n                <StyledText>\n                  <h1>{title}</h1>\n                  {(() => {\n                    switch ((startDate, endDate)) {\n                      case startDate && endDate === null:\n                        return null\n                      case endDate === null:\n                        return <h2>{startDate}</h2>\n                      default:\n                        return <h2>{`${startDate} - ${endDate}`}</h2>\n                    }\n                  })()}\n                  <p>{excerpt}</p>\n                  <Button\n                    to={slug}\n                    state={{ title, startDate, endDate, img, place }}\n                  >\n                    Mehr erfahren\n                  </Button>\n                </StyledText>\n                <StyledImage img={img} />\n              </StyledCard>\n            )\n          })}\n        </ProjectList>\n      </Content>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ProjektByTitle {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projekte//\" } }\n      sort: {\n        fields: [frontmatter___startDate, frontmatter___title]\n        order: DESC\n      }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 200)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            place\n            startDate(formatString: \"DD.MM.YYYY\", locale: \"de-DE\")\n            endDate(formatString: \"DD.MM.YYYY\", locale: \"de-DE\")\n            titleImage {\n              childImageSharp {\n                fluid(maxWidth: 1200) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Projects\n"],"sourceRoot":""}