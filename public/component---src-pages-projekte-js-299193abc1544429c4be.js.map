{"version":3,"sources":["webpack:///./src/pages/projekte.js"],"names":["Content","styled","div","ProjectList","StyledCard","Card","StyledButton","ButtonInternalLink","StyledText","StyledImage","Image","query","Projects","projects","data","allMarkdownRemark","edges","map","project","node","excerpt","slug","fields","frontmatter","title","signup","signupLink","startDate","endDate","img","titleImage","childImageSharp","fluid","key","dangerouslySetInnerHTML","__html","to","as","ButtonExternalLink"],"mappings":"mMAYMA,EAAUC,IAAOC,IAAV,oEAAGD,CAAH,yGAUPE,EAAcF,IAAOC,IAAV,wEAAGD,CAAH,yCAKXG,EAAaH,YAAOI,KAAV,uEAAGJ,CAAH,oLAgBVK,EAAeL,YAAOM,KAAV,yEAAGN,CAAH,uBAIZO,EAAaP,IAAOC,IAAV,uEAAGD,CAAH,kBAGVQ,EAAcR,YAAOS,KAAV,wEAAGT,CAAH,kBA+DJU,EAAK,aAoCHC,UA/FE,SAAC,GAAc,IAGfC,EAHc,EAAXC,KAEhBC,kBACEC,MAHyB,SAO7B,OACE,kBAAC,IAAD,KACE,kBAAChB,EAAD,KACE,wCACA,kBAACG,EAAD,KACGU,EAASI,KAAI,SAAAC,GAAY,IAAD,EAkBnBA,EAhBFC,KACEC,EAHmB,EAGnBA,QACUC,EAJS,EAInBC,OAAUD,KAJS,IAKnBE,YACEC,EANiB,EAMjBA,MACAC,EAPiB,EAOjBA,OACAC,EARiB,EAQjBA,WACAC,EATiB,EASjBA,UACAC,EAViB,EAUjBA,QAGgBC,EAbC,mBAWjBC,WACEC,gBACEC,OAOV,OACE,kBAAC5B,EAAD,CAAY6B,IAAKT,GACf,kBAAChB,EAAD,KACE,4BAAKgB,GACQ,OAAZI,EACC,4BAAKD,GAEL,4BAAQA,EAAR,MAAuBC,GAEzB,uBAAGM,wBAAyB,CAAEC,OAAQf,KACtC,kBAACd,EAAD,CAAc8B,GAAIf,GAAlB,kBACY,IAAXI,GACC,kBAACnB,EAAD,CAAc+B,GAAIC,IAAoBF,GAAIV,GAA1C,cAKJ,kBAACjB,EAAD,CAAaoB,IAAKA","file":"component---src-pages-projekte-js-299193abc1544429c4be.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport {\n  Layout,\n  Card,\n  Image,\n  ButtonInternalLink,\n  ButtonExternalLink,\n} from \"../components/ComponentsIndex\"\n\nconst Content = styled.div`\n  grid-column: 2/3;\n  padding: 3em 0;\n\n  h1 {\n    border-bottom: 1px solid rgb(var(--dark-gray));\n    padding-bottom: 1em;\n  }\n`\n\nconst ProjectList = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCard = styled(Card)`\n  margin: 1em 0;\n  display: grid;\n  grid-template-columns: 2fr 20em;\n  padding: 0;\n\n  p {\n    font-size: 0.9rem;\n  }\n\n  @media (max-width: 50em) {\n    grid-template-columns: 1fr;\n    grid-template-rows: max-content 20em;\n  }\n`\n\nconst StyledButton = styled(ButtonInternalLink)`\n  margin-right: 2em;\n`\n\nconst StyledText = styled.div`\n  padding: 3em;\n`\nconst StyledImage = styled(Image)`\n  height: 100%;\n`\n\nconst Projects = ({ data }) => {\n  const {\n    allMarkdownRemark: {\n      edges: [...projects],\n    },\n  } = data\n\n  return (\n    <Layout>\n      <Content>\n        <h1>Projekte</h1>\n        <ProjectList>\n          {projects.map(project => {\n            const {\n              node: {\n                excerpt,\n                fields: { slug },\n                frontmatter: {\n                  title,\n                  signup,\n                  signupLink,\n                  startDate,\n                  endDate,\n                  titleImage: {\n                    childImageSharp: {\n                      fluid: { ...img },\n                    },\n                  },\n                },\n              },\n            } = project\n\n            return (\n              <StyledCard key={title}>\n                <StyledText>\n                  <h1>{title}</h1>\n                  {endDate === null ? (\n                    <h4>{startDate}</h4>\n                  ) : (\n                    <h4>{`${startDate} - ${endDate}`}</h4>\n                  )}\n                  <p dangerouslySetInnerHTML={{ __html: excerpt }} />\n                  <StyledButton to={slug}>Mehr erfahren</StyledButton>\n                  {signup === true && (\n                    <StyledButton as={ButtonExternalLink} to={signupLink}>\n                      Anmeldung\n                    </StyledButton>\n                  )}\n                </StyledText>\n                <StyledImage img={img} />\n              </StyledCard>\n            )\n          })}\n        </ProjectList>\n      </Content>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query ProjektByTitle {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projekte//\" } }\n      sort: {\n        fields: [frontmatter___startDate, frontmatter___title]\n        order: DESC\n      }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 200, format: HTML)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            place\n            signup\n            signupLink\n            startDate(formatString: \"DD.MM.YYYY\", locale: \"de-DE\")\n            endDate(formatString: \"DD.MM.YYYY\", locale: \"de-DE\")\n            titleImage {\n              childImageSharp {\n                fluid(maxWidth: 1200) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Projects\n"],"sourceRoot":""}